---
/* components/LLMControls.astro */
---

<div class="flex flex-col gap-4" data-llm>
  <!-- gemini key input -->
  <label class="font-medium text-white">
    Gemini API key
    <input id="geminiKey" type="password"
           class="bg-slatecard p-1 rounded ml-2 w-56"
           placeholder="AIza..." />
  </label>
  <!-- free-form additions -->
  <label class="font-medium text-white">📄 Extra instructions to the LLM</label>
  <textarea id="llm-notes" rows="3"
            class="w-full bg-slatecard p-2 rounded resize-y font-mono"></textarea>

  <!-- preset selector -->
  <label class="font-medium text-white">
    System-prompt preset
    <select id="llmPreset" class="bg-slatecard p-1 rounded ml-2">
      <option value="danbooru">Danbooru preset</option>
      <option value="natural-language">Natural-language preset</option>
      <!-- add more <option>s as you introduce new presets -->
    </select>
  </label>

  <!-- send -->
  <button id="send-btn"
          class="bg-green-700 text-white px-3 py-2 rounded disabled:opacity-40"
          disabled>
    🚀 Send to LLM
  </button>
</div>

<script is:client>
  /* element refs */
  const btn   = document.getElementById('send-btn');
  const notes = document.getElementById('llm-notes');
  const presetSel = document.getElementById('llmPreset');
  const gemKeyInput = document.getElementById('geminiKey');

  // restore key from localStorage if available
  gemKeyInput.value = localStorage.getItem('geminiKey') || '';
  gemKeyInput.addEventListener('input', () => {
    localStorage.setItem('geminiKey', gemKeyInput.value.trim());
    btn.disabled = !(initialPrompt && gemKeyInput.value.trim());
  });

  let initialPrompt = '';

  /* get initial prompt from PromptBuilder */
  window.addEventListener('initial-prompt', e => {
    initialPrompt = e.detail.trim();
    btn.disabled = !(initialPrompt && gemKeyInput.value.trim());
  });

  /* click → POST to Netlify function */
  btn.addEventListener('click', async () => {
    if (!initialPrompt) return;
    if (!gemKeyInput.value.trim()) {
      post('❌ Gemini API key required.');
      return;
    }
    btn.disabled = true;
    post('🚀 Sending to LLM…');

    try {
      const res = await fetch('/.netlify/functions/generatePrompt', {
        method : 'POST',
        headers: { 'Content-Type': 'application/json' },
        body   : JSON.stringify({
          initialPrompt,
          preset: presetSel.value,          // <── chosen preset
          instructions: notes.value.trim(), // <── extra textarea
          geminiKey: gemKeyInput.value.trim()
        })
      });

      const { text, error } = await res.json();
      post(text || `❌ ${error || 'Generation failed.'}`);
    } catch (err) {
      post(`❌ Network error: ${err.message}`);
    } finally {
      btn.disabled = false;
    }
  });

  /* utility: publish to TerminalOutput */
  function post(msg) {
    window.dispatchEvent(new CustomEvent('terminal-msg', { detail: msg }));
  }
</script>
