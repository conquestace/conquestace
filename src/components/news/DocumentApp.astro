---
const { slug, title, description, headings } = Astro.props;
import TableOfContents from "./TableOfContents.astro";
---

<style>
  .doc-app {
    position: fixed;
    top: 6rem;
    left: 1rem;
    right: 1rem;
    bottom: 130px;
    z-index: 10;
    background: var(--color-surface);
    color: var(--color-text);
    border-radius: 1rem;
    box-shadow: 0 0 12px rgba(0,0,0,0.2);
    display: flex;
    overflow: hidden;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }

  .doc-app.minimized {
    transform: translateY(90%);
    opacity: 0.3;
    pointer-events: none;
  }

  .doc-app-toggle {
    position: fixed;
    bottom: 140px;
    right: 1rem;
    z-index: 20;
  }
</style>

<!-- Toggle Button that stays clickable -->
<div class="doc-app-toggle">
  <button id="toggle-minimize" class="px-3 py-1 bg-[var(--color-surface)] text-[var(--color-primary)] border border-[var(--color-border)] rounded hover:bg-[var(--color-hover)] hover:text-white transition">
    Minimize
  </button>
</div>

<!-- Document App -->
<div id="document-app" class="doc-app">
  <div class="flex flex-col w-full">
    <!-- Header -->
    <div class="flex items-center justify-between px-4 py-3 border-b border-[var(--color-border)] bg-[var(--color-neutral)]">
      <h2 class="text-xl font-semibold">{title}</h2>
      <div class="flex gap-2">
        <button id="toggle-toc" class="px-3 py-1 bg-[var(--color-surface)] text-[var(--color-primary)] border border-[var(--color-border)] rounded hover:bg-[var(--color-hover)] hover:text-white transition">Hide TOC</button>

           <button onclick="window.location.href='/encryptedfiles'" class="px-3 py-1 bg-[var(--color-surface)] text-[var(--color-primary)] border border-[var(--color-border)] rounded hover:bg-[var(--color-hover)] hover:text-white transition">Exit</button>
       
      </div>
    </div>

    <!-- Body -->
    <div id="doc-body" class="flex-1 flex overflow-auto">
      <aside class="w-64 border-r border-[var(--color-border)] p-4 overflow-y-auto">
        <TableOfContents headings={headings} />
      </aside>
      <article class="prose prose-invert p-6 overflow-y-auto w-full max-w-none">
        <slot />
      </article>
    </div>
  </div>
</div>

<!-- Script to handle UI -->
<script>
  const app = document.getElementById('document-app');
  const toc = document.querySelector('#doc-body aside');
  const toggleTocBtn = document.getElementById('toggle-toc');
  const toggleMinimizeBtn = document.getElementById('toggle-minimize');

  let tocVisible = true;
  let isMinimized = false;

  toggleTocBtn.onclick = () => {
    tocVisible = !tocVisible;
    toc.style.display = tocVisible ? 'block' : 'none';
    toggleTocBtn.textContent = tocVisible ? 'Hide TOC' : 'Show TOC';
  };

  toggleMinimizeBtn.onclick = () => {
    isMinimized = !isMinimized;
    app.classList.toggle('minimized', isMinimized);
    toggleMinimizeBtn.textContent = isMinimized ? 'Expand' : 'Minimize';
  };

  // Reset minimized state on load
window.addEventListener('DOMContentLoaded', () => {
  app.classList.remove('minimized');
  isMinimized = false;
  toggleMinimizeBtn.textContent = 'Minimize';
});

</script>
